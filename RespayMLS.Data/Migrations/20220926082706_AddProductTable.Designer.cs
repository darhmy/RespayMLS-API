// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RespayMLS.Data;

namespace RespayMLS.Data.Migrations
{
    [DbContext(typeof(RespayMLSDbContext))]
    [Migration("20220926082706_AddProductTable")]
    partial class AddProductTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RespayMLS.Core.Models.Charge", b =>
                {
                    b.Property<int>("ChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<double>("SetupFee")
                        .HasColumnType("float");

                    b.HasKey("ChargeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FrequencyId");

                    b.ToTable("Charge");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Frequency", b =>
                {
                    b.Property<int>("FrequencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysInPeriod")
                        .HasColumnType("int");

                    b.Property<string>("FrequencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrequencyTenure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FrequencyId");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.ItemType", b =>
                {
                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeId");

                    b.HasIndex("SectorId");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.PlanType", b =>
                {
                    b.Property<int>("PlanTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("PlanTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanTypeId");

                    b.HasIndex("ModuleId");

                    b.ToTable("PlanTypes");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("ChargeId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<double>("MaximumListing")
                        .HasColumnType("float");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<double>("SetupFee")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("ChargeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("SectorId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductCategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.HasIndex("SectorId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SectorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Charge", b =>
                {
                    b.HasOne("RespayMLS.Core.Models.Currency", "Currency")
                        .WithMany("Charges")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("RespayMLS.Core.Models.Frequency", "Frequency")
                        .WithMany("Charges")
                        .HasForeignKey("FrequencyId");

                    b.Navigation("Currency");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.ItemType", b =>
                {
                    b.HasOne("RespayMLS.Core.Models.Sector", "Sector")
                        .WithMany("ItemTypes")
                        .HasForeignKey("SectorId");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.PlanType", b =>
                {
                    b.HasOne("RespayMLS.Core.Models.Module", "Module")
                        .WithMany("PlanTypes")
                        .HasForeignKey("ModuleId");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Product", b =>
                {
                    b.HasOne("RespayMLS.Core.Models.Charge", null)
                        .WithMany("Products")
                        .HasForeignKey("ChargeId");

                    b.HasOne("RespayMLS.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("RespayMLS.Core.Models.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId");

                    b.HasOne("RespayMLS.Core.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("RespayMLS.Core.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("RespayMLS.Core.Models.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId");

                    b.Navigation("Currency");

                    b.Navigation("Frequency");

                    b.Navigation("ItemType");

                    b.Navigation("ProductCategory");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Role", b =>
                {
                    b.HasOne("RespayMLS.Core.Models.Sector", "Sector")
                        .WithMany("Roles")
                        .HasForeignKey("SectorId");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Charge", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Currency", b =>
                {
                    b.Navigation("Charges");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Frequency", b =>
                {
                    b.Navigation("Charges");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Module", b =>
                {
                    b.Navigation("PlanTypes");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RespayMLS.Core.Models.Sector", b =>
                {
                    b.Navigation("ItemTypes");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
